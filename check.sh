#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –≤ Harbor
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG_FILE="$SCRIPT_DIR/harbor.conf"

if [ -f "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
else
    echo "‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $CONFIG_FILE"
    echo "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª harbor.conf —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Harbor"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò] [–ü–†–û–ï–ö–¢]"
    echo ""
    echo "–û–ü–¶–ò–ò:"
    echo "  --all, -a          –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã (–≤–∫–ª—é—á–∞—è –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)"
    echo "  --unscanned, -u    –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  --help, -h         –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü–†–û–ï–ö–¢:"
    echo "  –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã)"
    echo ""
    echo "–ü–†–ò–ú–ï–†–´:"
    echo "  $0 library                    # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ library"
    echo "  $0 library --all              # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ library"
    echo "  $0 --unscanned                # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã –≤–æ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö"
    echo "  $0 --all                      # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã –≤–æ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:"
    curl -s -H "Authorization: Basic $AUTH_TOKEN" "$HARBOR_URL/api/v2.0/projects" | jq -r '.[].name' 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
get_all_paginated() {
    local url=$1
    local page_size=${2:-100}
    local all_data=""
    local page=1
    
    while true; do
        local current_url="${url}?page=${page}&page_size=${page_size}"
        local response=$(curl -s -H "Authorization: Basic $AUTH_TOKEN" "$current_url")
        
        if [ $? -ne 0 ]; then
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã $page" >&2
            return 1
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        local page_data=$(echo "$response" | jq -r '.[]' 2>/dev/null)
        if [ -z "$page_data" ] || [ "$page_data" = "null" ]; then
            break
        fi
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫ –æ–±—â–µ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        if [ -z "$all_data" ]; then
            all_data="$page_data"
        else
            all_data="$all_data
$page_data"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        local next_link=$(curl -s -I -H "Authorization: Basic $AUTH_TOKEN" "$current_url" | grep -i "link:" | grep -o 'rel="next"' || true)
        if [ -z "$next_link" ]; then
            break
        fi
        
        page=$((page + 1))
    done
    
    echo "$all_data"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–∞
check_artifact_scan() {
    local project=$1
    local repo=$2
    local digest=$3
    local show_all=$4
    
    local scan_info=$(curl -s -H "Authorization: Basic $AUTH_TOKEN" \
        "$HARBOR_URL/api/v2.0/projects/$project/repositories/$repo/artifacts/$digest?with_scan_overview=true" | \
        jq -r '.scan_overview."application/vnd.security.vulnerability.report; version=1.1"')
    
    if [ "$scan_info" != "null" ]; then
        local status=$(echo "$scan_info" | jq -r '.scan_status')
        local start_time=$(echo "$scan_info" | jq -r '.start_time')
        local end_time=$(echo "$scan_info" | jq -r '.end_time')
        
        case $status in
            "Success")
                local summary=$(echo "$scan_info" | jq -r '.summary')
                local total=$(echo "$summary" | jq -r '.total')
                local high=$(echo "$summary" | jq -r '.summary.High // 0')
                local medium=$(echo "$summary" | jq -r '.summary.Medium // 0')
                local low=$(echo "$summary" | jq -r '.summary.Low // 0')
                local critical=$(echo "$summary" | jq -r '.summary.Critical // 0')
                local unknown=$(echo "$summary" | jq -r '.summary.Unknown // 0')
                local fixable=$(echo "$summary" | jq -r '.fixable // 0')
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞–Ω–µ—Ä–µ
                local scanner_name=$(echo "$scan_info" | jq -r '.scanner.name // "Unknown"')
                local scanner_vendor=$(echo "$scan_info" | jq -r '.scanner.vendor // "Unknown"')
                local scanner_version=$(echo "$scan_info" | jq -r '.scanner.version // "Unknown"')
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏
                local severity_level=""
                if [ "$critical" -gt 0 ]; then
                    severity_level="üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô"
                elif [ "$high" -gt 0 ]; then
                    severity_level="üü† –í–´–°–û–ö–ò–ô"
                elif [ "$medium" -gt 0 ]; then
                    severity_level="üü° –°–†–ï–î–ù–ò–ô"
                elif [ "$low" -gt 0 ]; then
                    severity_level="üü¢ –ù–ò–ó–ö–ò–ô"
                else
                    severity_level="‚úÖ –ë–ï–ó–û–ü–ê–°–ù–´–ô"
                fi
                
                if [ "$show_all" = true ]; then
                    echo "‚úÖ $project/$repo@${digest:0:19}... - $severity_level"
                    echo "    üìä –£—è–∑–≤–∏–º–æ—Å—Ç–∏: $total (C:$critical H:$high M:$medium L:$low U:$unknown)"
                    echo "    üîß –ò—Å–ø—Ä–∞–≤–∏–º–æ: $fixable"
                fi
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
                total_vulnerabilities=$((total_vulnerabilities + total))
                total_critical=$((total_critical + critical))
                total_high=$((total_high + high))
                total_medium=$((total_medium + medium))
                total_low=$((total_low + low))
                total_unknown=$((total_unknown + unknown))
                total_fixable=$((total_fixable + fixable))
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞–Ω–µ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
                if [ -z "$project_scanner_name" ]; then
                    project_scanner_name="$scanner_name"
                    project_scanner_vendor="$scanner_vendor"
                    project_scanner_version="$scanner_version"
                fi
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫–∞–Ω–µ—Ä –≤ —Å–ø–∏—Å–æ–∫
                local scanner_info="$scanner_name $scanner_version ($scanner_vendor)"
                if [ -z "$scanner_list" ]; then
                    scanner_list="$scanner_info"
                else
                    scanner_list="$scanner_list|$scanner_info"
                fi
                
                return 0  # –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
            "Running")
                echo "üîÑ $project/$repo@${digest:0:19}... - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
                return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
            "Error")
                echo "‚ùå $project/$repo@${digest:0:19}... - –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
                return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
            "Pending")
                echo "‚è≥ $project/$repo@${digest:0:19}... - –û–∂–∏–¥–∞–µ—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
                return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
            *)
                echo "‚ùì $project/$repo@${digest:0:19}... - –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $status"
                return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
        esac
    else
        echo "‚ö†Ô∏è  $project/$repo@${digest:0:19}... - –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏"
        return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
check_project() {
    local project_name=$1
    local show_all=$2
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ: $project_name"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç
    project_exists=$(curl -s -H "Authorization: Basic $AUTH_TOKEN" "$HARBOR_URL/api/v2.0/projects" | jq -r --arg project "$project_name" '.[] | select(.name == $project) | .name')
    
    if [ -z "$project_exists" ]; then
        echo "‚ùå –ü—Ä–æ–µ–∫—Ç '$project_name' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        echo ""
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:"
        curl -s -H "Authorization: Basic $AUTH_TOKEN" "$HARBOR_URL/api/v2.0/projects" | jq -r '.[].name'
        return 1
    fi
    
    echo "üèóÔ∏è  –ü—Ä–æ–µ–∫—Ç: $project_name"
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    repos=$(get_all_paginated "$HARBOR_URL/api/v2.0/projects/$project_name/repositories" | jq -r '.name')
    
    if [ -z "$repos" ]; then
        echo "‚ùå –í –ø—Ä–æ–µ–∫—Ç–µ '$project_name' –Ω–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤!"
        return 1
    fi
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_artifacts=0
    scanned_count=0
    unscanned_count=0
    running_count=0
    error_count=0
    pending_count=0
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
    total_vulnerabilities=0
    total_critical=0
    total_high=0
    total_medium=0
    total_low=0
    total_unknown=0
    total_fixable=0
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–∞–Ω–µ—Ä–æ–≤
    scanner_list=""
    project_scanner_name=""
    project_scanner_vendor=""
    project_scanner_version=""
    
    echo ""
    if [ "$show_all" = true ]; then
        echo "üìã –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤:"
    else
        echo "‚ö†Ô∏è  –ù–µ–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã:"
    fi
    echo ""
    
    for repo in $repos; do
        repo_name=$(echo $repo | sed "s/$project_name\///")
        
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
        artifacts=$(get_all_paginated "$HARBOR_URL/api/v2.0/projects/$project_name/repositories/$repo_name/artifacts" | jq -r '.digest')
        
        if [ -z "$artifacts" ]; then
            continue
        fi
        
        for digest in $artifacts; do
            total_artifacts=$((total_artifacts + 1))
            
            if check_artifact_scan "$project_name" "$repo_name" "$digest" "$show_all"; then
                scanned_count=$((scanned_count + 1))
            else
                unscanned_count=$((unscanned_count + 1))
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –Ω–µ–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
                scan_info=$(curl -s -H "Authorization: Basic $AUTH_TOKEN" \
                    "$HARBOR_URL/api/v2.0/projects/$project_name/repositories/$repo_name/artifacts/$digest?with_scan_overview=true" | \
                    jq -r '.scan_overview."application/vnd.security.vulnerability.report; version=1.1"')
                
                if [ "$scan_info" != "null" ]; then
                    status=$(echo "$scan_info" | jq -r '.scan_status')
                    case $status in
                        "Running") running_count=$((running_count + 1)) ;;
                        "Error") error_count=$((error_count + 1)) ;;
                        "Pending") pending_count=$((pending_count + 1)) ;;
                    esac
                else
                    pending_count=$((pending_count + 1))
                fi
            fi
        done
    done
    
    echo ""
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ '$project_name':"
    echo "  –í—Å–µ–≥–æ –æ–±—Ä–∞–∑–æ–≤: $total_artifacts"
    echo "  –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: $scanned_count"
    echo "  –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: $unscanned_count"
    if [ $unscanned_count -gt 0 ]; then
        echo "    - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: $running_count"
        echo "    - –û—à–∏–±–∫–∏: $error_count"
        echo "    - –û–∂–∏–¥–∞–µ—Ç: $pending_count"
    fi
    
    if [ $scanned_count -gt 0 ]; then
        echo ""
        echo "üîç –°–≤–æ–¥–∫–∞ –ø–æ —É—è–∑–≤–∏–º–æ—Å—Ç—è–º:"
        echo "  üìä –í—Å–µ–≥–æ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: $total_vulnerabilities"
        echo "  üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ: $total_critical"
        echo "  üü† –í—ã—Å–æ–∫–∏–µ: $total_high"
        echo "  üü° –°—Ä–µ–¥–Ω–∏–µ: $total_medium"
        echo "  üü¢ –ù–∏–∑–∫–∏–µ: $total_low"
        echo "  ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ: $total_unknown"
        echo "  üîß –ò—Å–ø—Ä–∞–≤–∏–º—ã–µ: $total_fixable"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
        if [ $total_critical -gt 0 ]; then
            echo "  ‚ö†Ô∏è  –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô"
        elif [ $total_high -gt 0 ]; then
            echo "  ‚ö†Ô∏è  –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: üü† –í–´–°–û–ö–ò–ô"
        elif [ $total_medium -gt 0 ]; then
            echo "  ‚ö†Ô∏è  –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: üü° –°–†–ï–î–ù–ò–ô"
        elif [ $total_low -gt 0 ]; then
            echo "  ‚ö†Ô∏è  –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: üü¢ –ù–ò–ó–ö–ò–ô"
        else
            echo "  ‚úÖ –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: –ë–ï–ó–û–ü–ê–°–ù–´–ô"
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞–Ω–µ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞
        if [ -n "$project_scanner_name" ]; then
            echo ""
            echo "üîç –°–∫–∞–Ω–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞: $project_scanner_name $project_scanner_version ($project_scanner_vendor)"
        fi
    fi
    
    if [ $unscanned_count -gt 0 ]; then
        echo ""
        echo "üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
        echo "   ./scan.sh $project_name --force"
    fi
    
    if [ $scanned_count -eq $total_artifacts ] && [ $total_artifacts -gt 0 ]; then
        echo ""
        echo "üéâ –í—Å–µ –æ–±—Ä–∞–∑—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã!"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
check_all_projects() {
    local show_all=$1
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –≤–æ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö"
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    projects=$(get_all_paginated "$HARBOR_URL/api/v2.0/projects" | jq -r '.name')
    
    if [ -z "$projects" ]; then
        echo "‚ùå –ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 1
    fi
    
    total_checked=0
    total_scanned=0
    total_unscanned=0
    total_running=0
    total_errors=0
    total_pending=0
    
    for project in $projects; do
        echo ""
        echo "=========================================="
        check_project "$project" "$show_all"
        project_count=$((project_count + 1))
    done
    
    echo ""
    echo "üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "  –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: $project_count"
    echo "  –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: $total_checked"
    echo "  –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: $total_scanned"
    echo "  –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: $total_unscanned"
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
SHOW_ALL=false
PROJECT_NAME=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --all|-a)
            SHOW_ALL=true
            shift
            ;;
        --unscanned|-u)
            SHOW_ALL=false
            shift
            ;;
        --help|-h)
            show_help
            exit 0
            ;;
        -*)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ $0 --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
        *)
            if [ -z "$PROJECT_NAME" ]; then
                PROJECT_NAME="$1"
            else
                echo "‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"
                echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ $0 --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
                exit 1
            fi
            shift
            ;;
    esac
done

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
if [ -n "$PROJECT_NAME" ]; then
    check_project "$PROJECT_NAME" "$SHOW_ALL"
else
    check_all_projects "$SHOW_ALL"
fi

echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ!"
