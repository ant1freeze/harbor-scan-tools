#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –≤ Harbor

HARBOR_URL="http://localhost:8080"
USERNAME="admin"
PASSWORD="Harbor12345"

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –≤ Harbor..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–∞
check_artifact_scan() {
    local project=$1
    local repo=$2
    local digest=$3
    
    local scan_info=$(curl -s -u "$USERNAME:$PASSWORD" \
        "$HARBOR_URL/api/v2.0/projects/$project/repositories/$repo/artifacts/$digest?with_scan_overview=true" | \
        jq -r '.scan_overview."application/vnd.security.vulnerability.report; version=1.1"')
    
    if [ "$scan_info" != "null" ]; then
        local status=$(echo "$scan_info" | jq -r '.scan_status')
        local start_time=$(echo "$scan_info" | jq -r '.start_time')
        local end_time=$(echo "$scan_info" | jq -r '.end_time')
        
        case $status in
            "Success")
                local summary=$(echo "$scan_info" | jq -r '.summary')
                local total=$(echo "$summary" | jq -r '.total')
                local high=$(echo "$summary" | jq -r '.summary.High // 0')
                local medium=$(echo "$summary" | jq -r '.summary.Medium // 0')
                local low=$(echo "$summary" | jq -r '.summary.Low // 0')
                echo "‚úÖ $project/$repo@${digest:0:19}... - –ó–∞–≤–µ—Ä—à–µ–Ω–æ (–£—è–∑–≤–∏–º–æ—Å—Ç–µ–π: $total, H:$high M:$medium L:$low)"
                ;;
            "Running")
                echo "üîÑ $project/$repo@${digest:0:19}... - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è"
                ;;
            "Error")
                echo "‚ùå $project/$repo@${digest:0:19}... - –û—à–∏–±–∫–∞"
                ;;
            *)
                echo "‚ÑπÔ∏è  $project/$repo@${digest:0:19}... - –°—Ç–∞—Ç—É—Å: $status"
                ;;
        esac
    else
        echo "‚ö†Ô∏è  $project/$repo@${digest:0:19}... - –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏"
    fi
}

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
projects=$(curl -s -u "$USERNAME:$PASSWORD" "$HARBOR_URL/api/v2.0/projects" | jq -r '.[].name')

total_checked=0
completed=0
running=0
errors=0

for project in $projects; do
    echo ""
    echo "üèóÔ∏è  –ü—Ä–æ–µ–∫—Ç: $project"
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    repos=$(curl -s -u "$USERNAME:$PASSWORD" "$HARBOR_URL/api/v2.0/projects/$project/repositories" | jq -r '.[].name')
    
    for repo in $repos; do
        repo_name=$(echo $repo | sed "s/$project\///")
        
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        artifacts=$(curl -s -u "$USERNAME:$PASSWORD" "$HARBOR_URL/api/v2.0/projects/$project/repositories/$repo_name/artifacts" | jq -r '.[].digest')
        
        for digest in $artifacts; do
            check_artifact_scan "$project" "$repo_name" "$digest"
            total_checked=$((total_checked + 1))
        done
    done
done

echo ""
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: $total_checked"
echo "  –ó–∞–≤–µ—Ä—à–µ–Ω–æ: $completed"
echo "  –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: $running"
echo "  –û—à–∏–±–æ–∫: $errors"
