#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ Harbor

HARBOR_URL="http://localhost:8080"
USERNAME="admin"
PASSWORD="Harbor12345"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ $# -eq 0 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <project_name> [--all]"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 library"
    echo "  $0 test_project"
    echo "  $0 library --all"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:"
    curl -s -u "$USERNAME:$PASSWORD" "$HARBOR_URL/api/v2.0/projects" | jq -r '.[].name'
    exit 1
fi

PROJECT_NAME=$1
SHOW_ALL=false

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ --all
if [ "$2" = "--all" ]; then
    SHOW_ALL=true
fi

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ: $PROJECT_NAME"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç
project_exists=$(curl -s -u "$USERNAME:$PASSWORD" "$HARBOR_URL/api/v2.0/projects" | jq -r --arg project "$PROJECT_NAME" '.[] | select(.name == $project) | .name')

if [ -z "$project_exists" ]; then
    echo "‚ùå –ü—Ä–æ–µ–∫—Ç '$PROJECT_NAME' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:"
    curl -s -u "$USERNAME:$PASSWORD" "$HARBOR_URL/api/v2.0/projects" | jq -r '.[].name'
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–∞
check_artifact_scan() {
    local project=$1
    local repo=$2
    local digest=$3
    
    local scan_info=$(curl -s -u "$USERNAME:$PASSWORD" \
        "$HARBOR_URL/api/v2.0/projects/$project/repositories/$repo/artifacts/$digest?with_scan_overview=true" | \
        jq -r '.scan_overview."application/vnd.security.vulnerability.report; version=1.1"')
    
    if [ "$scan_info" != "null" ]; then
        local status=$(echo "$scan_info" | jq -r '.scan_status')
        local start_time=$(echo "$scan_info" | jq -r '.start_time')
        local end_time=$(echo "$scan_info" | jq -r '.end_time')
        
        case $status in
            "Success")
                local summary=$(echo "$scan_info" | jq -r '.summary')
                local total=$(echo "$summary" | jq -r '.total')
                local high=$(echo "$summary" | jq -r '.summary.High // 0')
                local medium=$(echo "$summary" | jq -r '.summary.Medium // 0')
                local low=$(echo "$summary" | jq -r '.summary.Low // 0')
                local critical=$(echo "$summary" | jq -r '.summary.Critical // 0')
                local unknown=$(echo "$summary" | jq -r '.summary.Unknown // 0')
                local fixable=$(echo "$summary" | jq -r '.fixable // 0')
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞–Ω–µ—Ä–µ
                local scanner_name=$(echo "$scan_info" | jq -r '.scanner.name // "Unknown"')
                local scanner_vendor=$(echo "$scan_info" | jq -r '.scanner.vendor // "Unknown"')
                local scanner_version=$(echo "$scan_info" | jq -r '.scanner.version // "Unknown"')
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏
                local severity_level=""
                if [ "$critical" -gt 0 ]; then
                    severity_level="üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô"
                elif [ "$high" -gt 0 ]; then
                    severity_level="üü† –í–´–°–û–ö–ò–ô"
                elif [ "$medium" -gt 0 ]; then
                    severity_level="üü° –°–†–ï–î–ù–ò–ô"
                elif [ "$low" -gt 0 ]; then
                    severity_level="üü¢ –ù–ò–ó–ö–ò–ô"
                else
                    severity_level="‚úÖ –ë–ï–ó–û–ü–ê–°–ù–´–ô"
                fi
                
                if [ "$SHOW_ALL" = true ]; then
                    echo "‚úÖ $project/$repo@${digest:0:19}... - $severity_level"
                    echo "    üìä –£—è–∑–≤–∏–º–æ—Å—Ç–∏: $total (C:$critical H:$high M:$medium L:$low U:$unknown)"
                    echo "    üîß –ò—Å–ø—Ä–∞–≤–∏–º–æ: $fixable"
                fi
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
                total_vulnerabilities=$((total_vulnerabilities + total))
                total_critical=$((total_critical + critical))
                total_high=$((total_high + high))
                total_medium=$((total_medium + medium))
                total_low=$((total_low + low))
                total_unknown=$((total_unknown + unknown))
                total_fixable=$((total_fixable + fixable))
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞–Ω–µ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
                if [ -z "$project_scanner_name" ]; then
                    project_scanner_name="$scanner_name"
                    project_scanner_vendor="$scanner_vendor"
                    project_scanner_version="$scanner_version"
                fi
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫–∞–Ω–µ—Ä –≤ —Å–ø–∏—Å–æ–∫
                local scanner_info="$scanner_name $scanner_version ($scanner_vendor)"
                if [ -z "$scanner_list" ]; then
                    scanner_list="$scanner_info"
                else
                    scanner_list="$scanner_list|$scanner_info"
                fi
                
                return 0  # –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
            "Running")
                echo "üîÑ $project/$repo@${digest:0:19}... - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
                return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
            "Error")
                echo "‚ùå $project/$repo@${digest:0:19}... - –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
                return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
            "Pending")
                echo "‚è≥ $project/$repo@${digest:0:19}... - –û–∂–∏–¥–∞–µ—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
                return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
            *)
                echo "‚ùì $project/$repo@${digest:0:19}... - –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $status"
                return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
                ;;
        esac
    else
        echo "‚ö†Ô∏è  $project/$repo@${digest:0:19}... - –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏"
        return 1  # –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω
    fi
}

echo "üèóÔ∏è  –ü—Ä–æ–µ–∫—Ç: $PROJECT_NAME"

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞–Ω–µ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞ (–∏–∑ –ø–µ—Ä–≤–æ–≥–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞)
project_scanner_name=""
project_scanner_vendor=""
project_scanner_version=""

# –ü–æ–ª—É—á–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
repos=$(curl -s -u "$USERNAME:$PASSWORD" "$HARBOR_URL/api/v2.0/projects/$PROJECT_NAME/repositories" | jq -r '.[].name')

if [ -z "$repos" ]; then
    echo "‚ùå –í –ø—Ä–æ–µ–∫—Ç–µ '$PROJECT_NAME' –Ω–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤!"
    exit 1
fi

total_artifacts=0
scanned_count=0
unscanned_count=0
running_count=0
error_count=0
pending_count=0

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
total_vulnerabilities=0
total_critical=0
total_high=0
total_medium=0
total_low=0
total_unknown=0
total_fixable=0

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–∞–Ω–µ—Ä–æ–≤ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
scanner_list=""

echo ""
if [ "$SHOW_ALL" = true ]; then
    echo "üìã –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤:"
else
    echo "‚ö†Ô∏è  –ù–µ–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã:"
fi
echo ""

for repo in $repos; do
    repo_name=$(echo $repo | sed "s/$PROJECT_NAME\///")
    
    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    artifacts=$(curl -s -u "$USERNAME:$PASSWORD" "$HARBOR_URL/api/v2.0/projects/$PROJECT_NAME/repositories/$repo_name/artifacts" | jq -r '.[].digest')
    
    if [ -z "$artifacts" ]; then
        continue
    fi
    
    for digest in $artifacts; do
        total_artifacts=$((total_artifacts + 1))
        
        if check_artifact_scan "$PROJECT_NAME" "$repo_name" "$digest"; then
            scanned_count=$((scanned_count + 1))
        else
            unscanned_count=$((unscanned_count + 1))
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –Ω–µ–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
            scan_info=$(curl -s -u "$USERNAME:$PASSWORD" \
                "$HARBOR_URL/api/v2.0/projects/$PROJECT_NAME/repositories/$repo_name/artifacts/$digest?with_scan_overview=true" | \
                jq -r '.scan_overview."application/vnd.security.vulnerability.report; version=1.1"')
            
            if [ "$scan_info" != "null" ]; then
                status=$(echo "$scan_info" | jq -r '.scan_status')
                case $status in
                    "Running") running_count=$((running_count + 1)) ;;
                    "Error") error_count=$((error_count + 1)) ;;
                    "Pending") pending_count=$((pending_count + 1)) ;;
                esac
            else
                pending_count=$((pending_count + 1))
            fi
        fi
    done
done

echo ""
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ '$PROJECT_NAME':"
echo "  –í—Å–µ–≥–æ –æ–±—Ä–∞–∑–æ–≤: $total_artifacts"
echo "  –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: $scanned_count"
echo "  –ù–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: $unscanned_count"
if [ $unscanned_count -gt 0 ]; then
    echo "    - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: $running_count"
    echo "    - –û—à–∏–±–∫–∏: $error_count"
    echo "    - –û–∂–∏–¥–∞–µ—Ç: $pending_count"
fi

if [ $scanned_count -gt 0 ]; then
    echo ""
    echo "üîç –°–≤–æ–¥–∫–∞ –ø–æ —É—è–∑–≤–∏–º–æ—Å—Ç—è–º:"
    echo "  üìä –í—Å–µ–≥–æ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: $total_vulnerabilities"
    echo "  üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ: $total_critical"
    echo "  üü† –í—ã—Å–æ–∫–∏–µ: $total_high"
    echo "  üü° –°—Ä–µ–¥–Ω–∏–µ: $total_medium"
    echo "  üü¢ –ù–∏–∑–∫–∏–µ: $total_low"
    echo "  ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ: $total_unknown"
    echo "  üîß –ò—Å–ø—Ä–∞–≤–∏–º—ã–µ: $total_fixable"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    if [ $total_critical -gt 0 ]; then
        echo "  ‚ö†Ô∏è  –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô"
    elif [ $total_high -gt 0 ]; then
        echo "  ‚ö†Ô∏è  –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: üü† –í–´–°–û–ö–ò–ô"
    elif [ $total_medium -gt 0 ]; then
        echo "  ‚ö†Ô∏è  –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: üü° –°–†–ï–î–ù–ò–ô"
    elif [ $total_low -gt 0 ]; then
        echo "  ‚ö†Ô∏è  –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: üü¢ –ù–ò–ó–ö–ò–ô"
    else
        echo "  ‚úÖ –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: –ë–ï–ó–û–ü–ê–°–ù–´–ô"
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞–Ω–µ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞
    if [ -n "$project_scanner_name" ]; then
        echo ""
        echo "üîç –°–∫–∞–Ω–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞: $project_scanner_name $project_scanner_version ($project_scanner_vendor)"
    fi
fi

if [ $unscanned_count -gt 0 ]; then
    echo ""
    echo "üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "   ./scan_project.sh $PROJECT_NAME --force"
fi

if [ $scanned_count -eq $total_artifacts ] && [ $total_artifacts -gt 0 ]; then
    echo ""
    echo "üéâ –í—Å–µ –æ–±—Ä–∞–∑—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã!"
fi
